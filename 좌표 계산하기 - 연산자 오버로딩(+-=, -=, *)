#include<iostream>
using namespace std;
 
class Point
{
private:
    int x, y;
public:
    Point(int x, int y) :x(x), y(y) {};
 
    void ShowPosition()
    {
        cout << "[" << x << ", " << y << "]" << endl;
    }
    Point operator +(const Point p) {
        return Point(p.x + x, p.y + y);
    }
    Point& operator+=(const Point& p) {
        (*this) = (*this) + p;
        return *this;
 
    }
 
    Point operator -(const Point p) {
        return Point(x - p.x, y - p.y);
    }
    Point& operator-=(const Point& p) {
        (*this) = (*this) - p;
        return *this;
 
    }
 
    Point operator*(int num) {
        return Point(x * num, y * num);
    }
 
    friend Point operator*(int num, Point ref);
 
 
};
Point operator*(int num, Point ref)
{
    ref.x *= num;
    ref.y *= num;
 
    return ref;
}
 
 
int main()
 
{
    int x1, x2, y1, y2;
 
    int a, b;
 
    cin >> x1 >> y1;
 
    cin >> x2 >> y2;
 
    cin >> a >> b;
 
    Point p1(x1, y1);
    Point p2(x2, y2);
 
    p1.ShowPosition();
 
    p2.ShowPosition();
 
    p1 += p2;
 
    p1.ShowPosition();
 
    p1 -= p2;
 
    p1 -= p2;
 
    p1.ShowPosition();
    Point p3 = p2 * a;
 
    Point p4 = a * p2 * b;
 
    p3.ShowPosition();
 
    p4.ShowPosition();
 
    return 0;
}
