#include<iostream>
using namespace std;
 
class Divisor
{
protected:
    int a;
    int n;
public:
    void input() { cin >> a; }
    virtual void printCount()
    {
        n = 0;
        for (int i = 1; i <= a; i++)
        {
            if (a % i == 0) n += 1;
        }
        cout << "Divisor: " << n << endl;
    }
};
class CommonDivisor :public Divisor
{
private:
    int b = 100;
public:
    void input() { cin >> Divisor::a >> b; }
    void printCount() {
        int min = 0;
        if (a < b) min = a;
        else min = b;
 
        for (int i = 1; i <= min; i++)
        {
            if (a % i == 0 and b % i == 0) {
                Divisor::n += 1;
            }
        }
        cout << "CommonDivisor: " << Divisor::n << endl;
    }
 
};
 
int main() {
 
    Divisor* d1 = new Divisor();
 
    Divisor* d2 = new CommonDivisor();
 
    CommonDivisor* d3 = new CommonDivisor();
 
    d1->input();
 
    d1->printCount();
 
    d2->input();
 
    d2->printCount();
 
    d3->input();
 
    d3->printCount();
 
    return 0;
 
}
